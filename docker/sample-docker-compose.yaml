# This example shows how to set up a Laravel application using docker-compose, with an Nginx web server, a MySQL database, and a custom network for the services.
version: "3.9"

services:
  # Nginx web server
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80" # Map port 80 from the container to port 80 on the host
      - "443:443" # Map port 443 from container to port 443 on the host
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # set up a custom configuration file
      - ./public:/usr/share/nginx/html # Mount the static files directory
    networks:
      - app-network

  # MySQL Database
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306" # Map the container's port 3306 to the host's port 3306
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: your_mysql_user_password
    volumes:
      - db_data:/var/lib/mysql # Mount a persistent volume for the database data
    networks:
      - app-network

# Docker networks
networks:
  app-network:
    driver: bridge

# Docker Volumes
volumes:
  db_data:
    driver: local
